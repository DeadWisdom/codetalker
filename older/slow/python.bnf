
<string> <= <tripd>|<trips>
<tripd>  : '"""'<char>*?'"""'
<trips>  : ''''''<char>*?''''''
<comment>: '#'<nolb>*'\n':
<token>  <= <firstwhite>
<firstwhite> : '\n'<wchar>*

<uoperator> : '-'|'+'|'not'|'~'
<boperator> : '-'|'**'|'*'|'+'|'and'|'or'|'/'|'|'|'in'
<aoperator> : '+='|'<='|'>='|'!='|'-='|'*='|'|='|'/='|'~='|'&='
<reserved> : 'for'|'and'|'or'|'not'|'while'|'if'|'elif'|'else'|'try'|'except'|'del'|'def'|'class'|'print'|'in'|'import'|'from'|'assert'|'raise'

----------------------------------

<start> : <statement>~ <statement tail>*
<statement tail> : <stend>+<statement>
<statement_> : <class>|<function>|<control>|<oneliner>
<oneliner>   : <assignment>|<mvalue>|<import>
<stend> : <firstwhite>|';'

<lside> : <id>|<idlist>|<idtuple>

<mvalue> : <value><mvalue tail>*
<mvalue tail> : ','<value>
<value> : <operation>|<string>|<number>|<fullid>|<object>|<list>|<tuple>
<fullid> : <id><idmod>*
<idmod> : '.'<id>|'['<mvalue>']'|'('<mvalue>')'

<class> : 'class'<id>'('<mvalue>')' ':' <oneliner>~
<function> : 'def'<id>'('<args>')' ':' <oneliner>~

<args> : <idtuple> <more ids>* <more default>* <starg>~ <2starg>~
<more ids> : ','<idtuple>
<more default> : ','<idtuple>'='<value>
<starg> : ',''*'<id>
<2starg> : ',''**'<id>

<idtuple> : <id>|'('<idtuple><idttail>*')'
<idttail> : ','<idtuple>

<control> : <if>|<elif>|<else>|<for>|<while>|<try>|<except>
<if>   : 'if'<mvalue>':'<oneliner>~
<elif> : 'elif'<mvalue>':'<oneliner>~
<else> : 'else'':'<oneliner>~

<for> : 'for' <idtuple><idttail>* 'in' <mvalue> ':' <oneliner>~
<while> : 'while' <value> ':' <oneliner>~
<try> : 'try' ':' <oneliner>~
<except> : 'except' <e args>~ ':' <oneliner>~
<e args> : <idtuple><ea2>~
<ea2> : ','<id>

<assignment> : <
