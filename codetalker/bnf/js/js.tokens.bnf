
id-start:replace
    [a-zA-Z_$]

id-in:replace
    [\w$]

reserved:one of, replace
    abstract 
    as 
    boolean
    break
    byte
    case
    catch
    char
    class 
    continue
    const 
    debugger 
    default
    delete
    do
    double
    else
    enum 
    export 
    extends 
    false
    final
    finally
    float
    for
    function
    goto 
    if
    implements 
    import 
    in
    instanceof
    int
    interface 
    is 
    long
    namespace 
    native 
    new
    null
    package 
    private 
    protected 
    public 
    return
    short
    static 
    super 
    switch
    synchronized 
    this
    throw
    throws 
    transient 
    true
    try
    typeof
    use 
    var
    void
    volatile 
    while
    with

string-literal:add
    '\'' string-s-contents* '\''

string-s-contents:
    '\\' any-char
    [^'\n]

whitespace:
    whites

new-line:
    '\n'
    '\r'

comment:add
    single-line-comment
    multi-line-comment

single-line-comment:
    '//' not-newline* '\n'

#TODO add \r
not-newline:
    [^\n]

multi-line-comment:
    '/*' comment-inner* '*/'

comment-inner:
    [^*]
    '*' not-slash

not-slash:
    [^/]

## adding hex
integer-literal:replace
    '0' 'x' hex-digit+
    digit+

hex-digit:
    [0-9a-fA-F]

