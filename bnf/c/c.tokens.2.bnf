<IDENTIFIER> : <id>
<CONSTANT> : 'constant'

<STRING_LITERAL> : '"'<dcontents>*'"'
<symbol> +: ';'

<SIZEOF> : 'sizeof'
<PTR_OP> : '*'
<INC_OP> : '++'
<DEC_OP> : '--'
<LEFT_OP> : '<<'
<RIGHT_OP> : '>>'
<LE_OP> : '<='
<GE_OP> : '>='
<EQ_OP> : '=='
<NE_OP> : '!='
<AND_OP> : '&&'
<OR_OP> : '||'
<MUL_ASSIGN> : '*='
<DIV_ASSIGN> : '/='
<MOD_ASSIGN> : '%='
<ADD_ASSIGN> : '+='
<SUB_ASSIGN> : '-='
<LEFT_ASSIGN> : '<<='
<RIGHT_ASSIGN> : '>>='
<AND_ASSIGN> : '&&='
<XOR_ASSIGN> : '&='
<OR_ASSIGN> : '||='

<TYPE_NAME> : 'int'|'float'

<TYPEDEF> : 'typedef'
<EXTERN> : 'extern'
<STATIC> : 'static'
<AUTO> : 'auto'
<REGISTER> : 'register'
<CHAR> : 'char'
<SHORT> : 'short'
<INT> : 'int'
<LONG> : 'long'
<SIGNED> : 'signed'
<UNSIGNED> : 'unsigned'
<FLOAT> : 'float'
<DOUBLE> : 'double'
<CONST> : 'const'
<VOLATILE> : 'volatile'
<VOID> : 'void'
<STRUCT> : 'struct'
<UNION> : 'union'
<ENUM> : 'enum'
<ELIPSIS> : 'elipsis'
<RANGE> : 'range'
<CASE> : 'case'
<DEFAULT> : 'default'
<IF> : 'if'
<ELSE> : 'else'
<SWITCH> : 'switch'
<WHILE> : 'while'
<DO> : 'do'
<FOR> : 'for'
<GOTO> : 'goto'
<CONTINUE> : 'continue'
<BREAK> : 'break'
<RETURN> : 'return'
<token> : <CONSTANT>|<STRING_LITERAL>|<SIZEOF>|<PTR_OP>|<INC_OP>|<DEC_OP>|<LEFT_OP>|<RIGHT_OP>|<LE_OP>|<GE_OP>|<EQ_OP>|<NE_OP>|<AND_OP>|<OR_OP>|<MUL_ASSIGN>|<DIV_ASSIGN>|<MOD_ASSIGN>|<ADD_ASSIGN>|<SUB_ASSIGN>|<LEFT_ASSIGN>|<RIGHT_ASSIGN>|<AND_ASSIGN>|<XOR_ASSIGN>|<OR_ASSIGN>|<TYPE_NAME>|<TYPEDEF>|<EXTERN>|<STATIC>|<AUTO>|<REGISTER>|<CHAR>|<SHORT>|<INT>|<LONG>|<SIGNED>|<UNSIGNED>|<FLOAT>|<DOUBLE>|<CONST>|<VOLATILE>|<VOID>|<STRUCT>|<UNION>|<ENUM>|<ELIPSIS>|<RANGE>|<CASE>|<DEFAULT>|<IF>|<ELSE>|<SWITCH>|<WHILE>|<DO>|<FOR>|<GOTO>|<CONTINUE>|<BREAK>|<RETURN>|<IDENTIFIER>|<symbol>

